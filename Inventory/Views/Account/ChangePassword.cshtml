@model ChangePasswordViewModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Importação Completa</h5>

                <form asp-controller="Account" asp-action="ChangePassword" method="post" enctype="multipart/form-data">
                    <div class="col-4">
                        <label class="control-label">Digite sua senha atual</label>
                        <input asp-for="CurrentPassword" class="form-control" />
                        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                    </div>

                    <div class="col-4 mt-2">
                        <label asp-for="NewPassword" class="control-label"></label>
                        <input id="passwordInput" asp-for="NewPassword" class="form-control" />
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                    </div>

                    <div class="col-4 mt-2">
                        <label class="control-label">Confirme a senha</label>
                        <input id="confirmPasswordInput" type="password" class="form-control" />
                        <span id="passwordMismatchError" class="text-danger"></span>
                    </div>

                    <input type="hidden" name="userId" value="@user.Id" />

                    <div class="mt-3">
                        <input id="submitButton" type="submit" value="Salvar" class="btn btn-primary" disabled />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    const passwordInput = document.getElementById('passwordInput');
    const confirmPasswordInput = document.getElementById('confirmPasswordInput');
    const passwordMismatchError = document.getElementById('passwordMismatchError');
    const submitButton = document.getElementById('submitButton');

    let typingTimer;
    const doneTypingInterval = 100;

    function checkPasswordMatch() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        if (password !== confirmPassword) {
            passwordMismatchError.textContent = "As senhas não coincidem.";
            submitButton.disabled = true;
        } else {
            passwordMismatchError.textContent = "";
            submitButton.disabled = false;
        }
    }

    confirmPasswordInput.addEventListener('input', function () {
        clearTimeout(typingTimer);
        typingTimer = setTimeout(checkPasswordMatch, doneTypingInterval);
    });

    confirmPasswordInput.addEventListener('keydown', function () {
        clearTimeout(typingTimer);
    });
</script>


