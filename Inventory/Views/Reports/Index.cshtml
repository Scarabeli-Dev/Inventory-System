@model PagingList<StockTakingReport>
@{
    ViewData["Title"] = "Relatório Final";
}

<h3>@ViewData["Title"]</h3>

<form method="get">
    <div class="row align-items-end mb-3">
        <div class="col-md-2">
            <label for="warehouseId" class="form-label">Pesquise pelo Item</label>
            <input name="filter" class="form-control" placeholder="filtro" value="@Model.RouteValue["Filter"]" />
        </div>

        <div class="col-md-2">
            <label for="warehouseId" class="form-label">Warehouse</label>
            @Html.DropDownList("warehouseId", ViewData["WarehouseId"] as SelectList, new { @class = "form-control" })
        </div>

        <div class="col-md-3">
            <label for="stockSitutation" class="form-label">Situação do Estoque</label>
            <select name="stockSituation" class="form-control">
                <option value="-1">Todos</option>
                <option value="0">Regular</option>
                <option value="1">Item Não Contado</option>
                <option value="2">Quantidade contada inferior ao sistema</option>
                <option value="3">Quantidade contada superior ao sistema</option>
            </select>
        </div>

        <div class="col-md-3">
            <label for="addressingSitutation" class="form-label">Situação do Endereçamento</label>
            <select name="addressingSituation" class="form-control">
                <option value="-1">Todos</option>
                <option value="0">Regular</option>
                <option value="1">Item Não Contado</option>
                <option value="2">Item armazenado em mais de um endereçamento</option>
                <option value="3">Item sem registro de armazenamento</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-info">Aplicar filtro</button>
        </div>
    </div>
</form>


<div class="card">
    <div class="card-body">

        <table class="table mt-4">
            <thead class="align-middle">
                <tr class="table-primary">
                    <th>
                        Código do Item
                    </th>
                    <th>
                        Nome do Item
                    </th>
                    <th>
                        Unidade de Medida
                    </th>
                    <th>
                        Estoque do Sistema
                    </th>
                    <th>
                        Quantidade da Contagem
                    </th>
                    <th>
                        Divergência de Estoque
                    </th>
                    <th>
                        Situação do Estoque
                    </th>
                    <th>
                        Situação do Endereçamento
                    </th>
                </tr>
            </thead>
            <tbody class="align-middle">
                @foreach (var item in Model)
                {

                    <tr>
                        <td>
                            <button class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#collapse-@item.ItemId" aria-expanded="false" aria-controls="collapse-@item.ItemId">
                                @Html.DisplayFor(modelItem => item.ItemId)
                            </button>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitOfMeasurement)
                        </td>
                        <td class="text-end">
                            @Html.DisplayFor(modelItem => item.SystemQuantity)
                        </td>
                        <td class="text-end">
                            @Html.DisplayFor(modelItem => item.QuantityStockTaking)
                        </td>

                        @if (item.Divergence > 0)
                        {
                            <td class="table-danger text-end">
                                <i class="bi bi-arrow-down-circle"></i> @Html.DisplayFor(modelItem => item.Divergence)
                            </td>
                        }
                        else if (item.Divergence < 0)
                        {
                            <td class="table-danger text-end">
                                <i class="bi bi-arrow-up-circle"></i> @Html.DisplayFor(modelItem => item.Divergence)
                            </td>
                        }
                        else
                        {
                            <td class="table-success text-end">
                                <i class="bi bi-check-circle"></i> @Html.DisplayFor(modelItem => item.Divergence)
                            </td>
                        }
                        @if (item.StockSituation == StockSituation.Regular)
                        {
                            <td>
                                Regular
                            </td>
                        }
                        else if (item.StockSituation == StockSituation.ItemNoCount)
                        {
                            <td>
                                Item Não Contado
                            </td>
                        }
                        else if (item.StockSituation == StockSituation.HigherThanRegistered)
                        {
                            <td>
                                Quantidade contada inferior ao sistema
                            </td>
                        }
                        else if (item.StockSituation == StockSituation.LowerThanRegistered)
                        {
                            <td>
                                Quantidade contada superior ao sistema
                            </td>
                        }

                        @if (item.AddressingSituation == AddressingSituation.Regular)
                        {
                            <td>
                                Regular
                            </td>
                        }
                        else if (item.AddressingSituation == AddressingSituation.ItemNoCount)
                        {
                            <td>
                                Item Não Contado
                            </td>
                        }
                        else if (item.AddressingSituation == AddressingSituation.ItemStoredInMoreThanOneAddress)
                        {
                            <td>
                                Item armazenado em mais de um endereçamento
                            </td>
                        }
                        else if (item.AddressingSituation == AddressingSituation.ItemNoAddressRecord)
                        {
                            <td>
                                Item sem registro de armazenamento
                            </td>
                        }
                    </tr>
                    <tr id="collapse-@item.ItemId" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordion-@item.ItemId">
                        <td colspan="8" class="accordion-body">
                            <table class="table">
                                <thead class="align-middle">
                                    <tr class="table-info">
                                        <th>
                                            Depósito
                                        </th>
                                        <th>
                                            Endereçamento
                                        </th>
                                        <th class="text-end">
                                            Quantidade do Sistema
                                        </th>
                                        <th class="text-end">
                                            Quantidade da Contagem
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        HashSet<int> addressingItem = new HashSet<int>();
                                    }
                                    @foreach (var stockTaking in item.StockTakings)
                                    {
                                        decimal itemSystemQuantity = 0;
                                        addressingItem.Add(stockTaking.AddressingsInventoryStart.AddressingId);
                                        <tr class="table-secondary">
                                            <td>
                                                @stockTaking.AddressingsInventoryStart.Addressing.Warehouse.Name
                                            </td>
                                            <td>
                                                @stockTaking.AddressingsInventoryStart.Addressing.Name
                                            </td>
                                            <td class="text-end">
                                                @foreach (var addressingQtd in stockTaking.AddressingsInventoryStart.Addressing.Item)
                                                {
                                                    if (addressingQtd.ItemId == item.ItemId)
                                                    {
                                                        itemSystemQuantity = itemSystemQuantity + addressingQtd.Quantity;
                                                    }
                                                }
                                                @itemSystemQuantity
                                            </td>
                                            <td class="text-end">
                                                @stockTaking.StockTakingQuantity
                                            </td>
                                        </tr>
                                    }
                                    @foreach (var addressing in item.Addressings)
                                    {
                                        if (!addressingItem.Contains(addressing.AddressingId))
                                        {
                                            <tr class="table-secondary">
                                                <td>
                                                    @addressing.Addressing.Warehouse.Name
                                                </td>
                                                <td>
                                                    @addressing.Addressing.Name
                                                </td>
                                                <td class="text-end">
                                                    @addressing.Quantity
                                                </td>
                                                <td class="text-end">
                                                    0
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div>
    <vc:pager paging-list="@Model"></vc:pager>
</div>