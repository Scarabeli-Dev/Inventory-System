@model PagingList<AddressingsInventoryStart>

@{
    ViewData["Title"] = "Selecione o endereçamento para ver os detalhes";
}

<h2>@ViewData["Title"]</h2>
@*<div class="progress mt-3" id="generalProgress">
    @{
        var progressWidthAddressing = (adressingsQtd * 100) / Model.Count();
        var progressPercentageAdressing = $"{progressWidthAddressing}%";
    }
    <div class="progress-bar" role="progressbar" style="width: @progressWidthAddressing%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
        @progressPercentageAdressing Concluídos!
    </div>
</div>*@

<form method="get">
    <div class="row align-items-end mb-3">
        <div class="col-md-2">
            <label for="warehouseId" class="form-label">Pesquise pelo Item</label>
            <input name="filter" class="form-control" placeholder="filtro" value="@Model.RouteValue["Filter"]" />
        </div>

        <div class="col-md-2">
            <label for="warehouseId" class="form-label">Depósito</label>
            @Html.DropDownList("warehouseId", ViewData["WarehouseId"] as SelectList, new { @class = "form-control" })
        </div>

        <div class="col-md-2">
            <button type="submit" class="btn btn-info">Aplicar filtro</button>
        </div>
    </div>
</form>

<div class="card">
    <div class="card-body">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        Status
                    </th>
                    <th>
                        @Html.SortableHeaderFor(model => model.Addressing.Name)
                    </th>
                    <th>
                        Total de Itens
                    </th>
                    <th>
                        Total de Items Contados
                    </th>
                    <th>Quantidade Concluída</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    int itemQuantity = 0;
                    int itemStockTaking = 0;

                    if (item.StockTaking != null)
                    {
                        foreach (var result in item.StockTaking)
                        {
                            itemStockTaking = item.StockTaking.Count();
                        }
                    }

                    if (item.Addressing.Item != null)
                    {
                        foreach (var result in item.Addressing.Item)
                        {
                            itemQuantity = item.Addressing.Item.Count();
                        }
                    }

                    <tr>
                        @if (item.AddressingCountEnded == true)
                        {
                            <td>
                                Finalizado
                            </td>
                        }
                        else if (item.AddressingCountRealized == true && item.AddressingCountEnded == false)
                        {
                            <td>
                                Contado
                            </td>
                        }
                        else
                        {
                            <td>
                                Pendente
                            </td>
                        }
                        <td>
                            @Html.DisplayFor(modelItem => item.Addressing.Name)
                        </td>
                        <td>
                            @itemQuantity
                        </td>
                        <td>
                            @itemStockTaking
                        </td>
                        <td class="col-4">
                            <div class="progress mt-3">
                                @{
                                    var progressWidth = (itemStockTaking * 100) / itemQuantity;
                                    var progressPercentage = $"{progressWidth}%";
                                }
                                <div class="progress-bar" role="progressbar" style="width: @progressWidth%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    @progressPercentage
                                </div>
                            </div><!-- End Progress Bars with labels -->
                        </td>
                        <td>
                            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                <a href="@Url.Action("StockTakingReport", "StockTaking", new { addressingId = item.AddressingId })" class="btn btn-success">
                                    <i class="bi bi-info-circle"></i>
                                </a>
                            </div>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<div>
    <vc:pager paging-list="@Model"></vc:pager>
</div>