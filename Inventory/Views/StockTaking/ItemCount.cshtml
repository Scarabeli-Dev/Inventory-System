@model StockTaking

@{
    Item itemCount = ViewBag.Item;
    Addressing addressing = ViewBag.Addressing;
    var addressingsList = (List<Addressing>)ViewBag.Addressings;
    InventoryStart inventoryStart = ViewBag.Inventory;
    ViewData["Title"] = "Contagem de Item";
}
<link rel="stylesheet" href="/css/chosen.min.css">


<h3>O item sendo contado é o: @itemCount.Name</h3>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="ItemCount">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="form-group">
                    <h2>Confirme o endereçamento: <strong>@addressing.Name</strong></h2>
                    <div id="stockTakingList">
                        <select asp-for="AddressingId" name="AddressingId"  class="chosen-select col-6 form-control" tabindex="17" id="addressing-select">
                            @foreach (var item in addressingsList)
                            {
                                if (addressing.Id == item.Id)
                                {
                                    <option selected value="@item.Id">@item.Name</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <button type="button" class="btn btn-success" onclick="showStockTaking()">Confirmar Endereçamento</button>
                    <button type="button" class="btn btn-danger" onclick="changeAddressing()">Mudar Endereçamento</button>
                </div>
            </div>
            <div id="stockTaking" style="display: none;">
                <div class="form-group">
                    <label asp-for="StockTakingQuantity" class="control-label"></label>
                    <input type="number" asp-for="StockTakingQuantity" class="form-control" step="any" onchange="formatDecimalInput(this)" />
                    <span asp-validation-for="StockTakingQuantity" class="text-danger"></span>
                </div>

                <div class="form-group col-12 form-check form-switch">
                    <input type="checkbox" class="form-control form-check-input" role="switch" id="flexSwitchCheckDefault" />
                    <label class="control-label form-check-label" for="flexSwitchCheckDefault">Item Perecível</label>
                    <span class="text-danger"></span>
                </div>
                <div id="dates" style="display: none;">
                    <div class="form-group">
                        <label asp-for="FabricationDate" class="control-label"></label>
                        <input asp-for="FabricationDate" class="form-control" />
                        <span asp-validation-for="FabricationDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ExpirationDate" class="control-label"></label>
                        <input asp-for="ExpirationDate" class="form-control" />
                        <span asp-validation-for="ExpirationDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ItemBatch" class="control-label"></label>
                        <input asp-for="ItemBatch" class="form-control" />
                        <span asp-validation-for="ItemBatch" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="StockTakingObservation" class="control-label"></label>
                    <input asp-for="StockTakingObservation" class="form-control" />
                    <span asp-validation-for="StockTakingObservation" class="text-danger"></span>
                </div>
                <div class="form-group d-none">
                    <input asp-for="InventoryStartId" class="form-control" value="@inventoryStart.Id" />
                    <input asp-for="ItemId" class="form-control" value="@itemCount.Id" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script src="~/js/chosen.jquery.min.js" type="text/javascript"></script>
    <script src="~/js/init.js" type="text/javascript"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">

        // Função para mostrar o conteúdo da div "stockTaking"
        function showStockTaking() {
            var stockTakingDiv = document.getElementById("stockTaking");
            var selectElement = document.getElementById("addressing-select");

            stockTakingDiv.style.display = "block";
        }

        // Função para desbloquear o select e ocultar o conteúdo da div "stockTaking"
        function changeAddressing() {
            var stockTakingDiv = document.getElementById("stockTakingList");
            var selectElement = document.getElementById("addressing-select");

            selectElement.disabled = false;
        }

        // Função para mostrar ou ocultar o conteúdo da div "dates" - Itens perecíveis
        function toggleDates() {
            var switchElement = document.getElementById("flexSwitchCheckDefault");
            var datesDiv = document.getElementById("dates");

            if (switchElement.checked) {
                datesDiv.style.display = "block";
            } else {
                datesDiv.style.display = "none";
            }
        }
        // Vincula o evento de mudança (change) do switch à função toggleDates
        document.getElementById("flexSwitchCheckDefault").addEventListener("change", toggleDates);

        //function formatDecimalInput(input) {
        //    var value = input.value;
        //    var formattedValue = parseFloat(value.replace(',', '.')).toLocaleString('pt-BR');
        //    input.value = formattedValue;
        //}

    </script>
}
