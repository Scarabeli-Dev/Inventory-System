@model StockTaking

@{
    Item itemCount = ViewBag.Item;
    Addressing addressing = ViewBag.Addressing;
    var addressingsList = (List<Addressing>)ViewBag.Addressings;
    InventoryStart inventoryStart = ViewBag.Inventory;
    ViewData["Title"] = "Contagem de Item";
    string filter = ViewBag.Filter;
}

<div class="text-center">
    <h3>O item sendo contado é o: <strong>@itemCount.Id - @itemCount.Name</strong></h3>
</div>
<div class="card">
    <div class="card-body mt-3">
        <form class="row g-3" asp-action="ItemCount">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="col-md-12">
                <div class="d-flex justify-content-around">
                    <h2>Confirme o endereçamento: <strong><span id="addressing-name">@addressing.Name - Depósito @addressing.Warehouse.Name</span></strong></h2>
                </div>

                <div class="d-flex justify-content-around m-3">
                    <button type="button" class="btn btn-primary" onclick="actionEdit()" data-bs-toggle="modal" data-bs-target="#modal-form" data-bs-backdrop="static">
                        Informar Novo Endereçamento
                    </button>

                    <button type="button" class="btn btn-success" onclick="showStockTaking()">
                        Confirmar Endereçamento
                    </button>
                </div>
            </div>
            <div id="stockTaking" style="display: none;" class="align-items-baseline">
                <div class="row">
                    <div class="col-4">
                        <label asp-for="StockTakingQuantity" class="control-label"></label>
                        <div class="input-group">
                            <input type="number" asp-for="StockTakingQuantity" class="form-control" step="any" id="stockTakingQuantity" />
                            <div class="input-group-append">
                                <span class="input-group-text">@itemCount.UnitOfMeasurement</span>
                            </div>
                        </div>
                        <span asp-validation-for="StockTakingQuantity" class="text-danger"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-4">
                        <label asp-for="StockTakingObservation" class="control-label"></label>
                        <input asp-for="StockTakingObservation" class="form-control" />
                        <span asp-validation-for="StockTakingObservation" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">

                    <div class="col-4 form-check form-switch">
                        <input type="checkbox" asp-for="IsPerishableItem" class="form-control form-check-input" id="flexSwitchCheckDefault" />
                        <label class="control-label form-check-label" for="flexSwitchCheckDefault">Item Perecível</label>
                        <span class="text-danger"></span>
                    </div>
                    <div id="dates" style="display: none;">

                        <h4>Lotes de Fabricação:</h4>
                        <table id="lotesTable">
                            <thead>
                                <tr>
                                    <th>Lote</th>
                                    <th>Data de Fabricação</th>
                                    <th>Data de Vencimento</th>
                                    <th>Quantidade do Lote</th>
                                    <th>Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>

                        <div id="addLote" class="btn btn-primary" onclick="addLote()">Adicionar Lote</div>
                    </div>
                </div>
                <div class="col-4 d-none">
                    <input asp-for="ItemId" class="form-control" value="@itemCount.Id" />
                    <input asp-for="AddressingsInventoryStartId" name="AddressingsInventoryStartId" class="form-control" value="@addressing.Id" id="addressing-id" />
                </div>
                <div class="d-flex flex-row">
                    <div class="mt-3 me-2">
                        <input type="submit" value="Salvar" class="btn btn-primary" />
                    </div>
                    <div class="mt-3 ms-2">
                        <a href="@Url.Action("Details", "Warehouses", new { id = @addressing.WarehouseId })" class="btn btn-primary">Voltar para a lista</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


<div>
    <div class="modal fade" id="modal-form" tabindex="-1" data-bs-backdrop="false">
    </div>
</div>

<!-- Modal de Confirmação de Remoção -->
<div class="modal fade" id="removeItemBatch" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Remover Lote</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Deseja realmente excluir o lote?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btnDelteYes">Excluir</button>
            </div>
        </div>
    </div>
</div>
<!-- Fim do Modal de Confirmação de Remoção -->
@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            $('#btnDelteYes').click(function () {
                var id = $('#removeItemBatch').data('id');
                $('[data-id=' + id + ']').remove();
                $('#removeItemBatch').modal('hide');
                console.log($('#removeItemBatch').data('id'))
            });

            // Exibir campos da div "dates" se IsPerishableItem for true
            toggleDates();
        });

        function addLote() {
            // Adicionar lote
            var rowCount = $('#lotesTable tbody tr').length;
            var newRow = '<tr data-id=' + rowCount + '>' +
                '<td><input type="text" name="PerishableItem[' + rowCount + '].ItemBatch" class="form-control" /></td>' +
                '<td><input type="date" name="PerishableItem[' + rowCount + '].FabricationDate" class="form-control"  onchange="validateDates()"/></td>' +
                '<td><input type="date" name="PerishableItem[' + rowCount + '].ExpirationDate" class="form-control"  onchange="validateDates()"/></td>' +
                '<td>' +
                '   <div class="input-group">' +
                '       <input type="number" name="PerishableItem[' + rowCount + '].PerishableItemQuantity" class="form-control col-md-2" step="any" onchange="atualizarStockTakingQuantity()" />' +
                '       <div class="input-group-append">' +
                '           <span class="input-group-text">@itemCount.UnitOfMeasurement</span>' +
                '       </div>' +
                '   </div>' +
                '</td>' +
                '<td><div class="btn btn-danger" id="itemBatchRemove" onclick = "openDelet(' + rowCount + ')"><i class="bi bi-trash"></i></div></td>' +
                '</tr>';
            $('#lotesTable tbody').append(newRow);
        }

        //Verifica data de fabricação e validade
        function validateDates() {
            var rows = document.querySelectorAll("tr[data-id]");
            rows.forEach(function (row) {
                var fabricationDateInput = row.querySelector("input[name$='FabricationDate']");
                var expirationDateInput = row.querySelector("input[name$='ExpirationDate']");
                var fabricationDate = new Date(fabricationDateInput.value);
                var expirationDate = new Date(expirationDateInput.value);

                if (fabricationDateInput.value !== "" && expirationDateInput.value !== "") {
                    if (fabricationDate >= expirationDate) {
                        alert("A data de fabricação deve ser anterior à data de validade.");
                        fabricationDateInput.value = "";
                        expirationDateInput.value = "";
                    }
                }
            });
        }

        //Abre modal Delete
        function openDelet(id) {
            $('#removeItemBatch').data('id', id).modal('show');
            console.log(id);
        }

        // Atualizar StockTakingQuantity com a soma das quantidades do lote
        function atualizarStockTakingQuantity() {
            var somaQuantidades = calcularSomaQuantidadesLote();
            $('#stockTakingQuantity').val(somaQuantidades);
        }

        // Função para calcular a soma das quantidades do lote
        function calcularSomaQuantidadesLote() {
            var somaQuantidades = 0;
            $('input[name^="PerishableItem["][name$="].PerishableItemQuantity"]').each(function () {
                var quantidade = parseFloat($(this).val());
                if (!isNaN(quantidade)) {
                    somaQuantidades += quantidade;
                }
            });
            return somaQuantidades;
        }


        // Função para mostrar o conteúdo da div "stockTaking"
        function showStockTaking() {
            var stockTakingDiv = document.getElementById("stockTaking");
            var selectElement = document.getElementById("addressing-select");

            stockTakingDiv.style.display = "block";
        }

        // Função para desbloquear o select e ocultar o conteúdo da div "stockTaking"
        function changeAddressing() {
            var stockTakingDiv = document.getElementById("stockTakingList");
            var selectElement = document.getElementById("addressing-select");

            selectElement.disabled = false;
        }

        // Função para mostrar ou ocultar o conteúdo da div "dates" - Itens perecíveis
        function toggleDates() {
            var switchElement = document.getElementById("flexSwitchCheckDefault");
            var datesDiv = document.getElementById("dates");

            if (switchElement.checked) {
                datesDiv.style.display = "block";
                $('#stockTakingQuantity').prop('disabled', true);
                calcularSomaQuantidadesLote();
                atualizarStockTakingQuantity();
                addLote();
            } else {
                datesDiv.style.display = "none";
                $('#stockTakingQuantity').prop('disabled', false);
            }
        }
        // Vincula o evento de mudança (change) do switch à função toggleDates
        document.getElementById("flexSwitchCheckDefault").addEventListener("change", toggleDates);

        function actionEdit() {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("AddressingForCount", "Addressings")',
                dataType: 'html',
                data: {},
                cache: false,
                async: true,
                success: function (data) {
                    $('#modal-form').empty();
                    $('#modal-form').append('@Url.Action("AddressingForCount", "Addressing")');
                    $('#modal-form').html(data);
                }
            });
        }

    </script>
}